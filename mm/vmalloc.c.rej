--- mm/vmalloc.c
+++ mm/vmalloc.c
@@ -1610,25 +1610,24 @@
  */
 void *vmalloc(unsigned long size)
 {
-	return __vmalloc_node(size, 1, GFP_KERNEL | __GFP_HIGHMEM, PAGE_KERNEL,
-					-1, __builtin_return_address(0));
+	return __vmalloc_node_flags(size, -1, GFP_KERNEL | __GFP_HIGHMEM);
 }
 EXPORT_SYMBOL(vmalloc);
 
 /**
- *      vzalloc - allocate virtually contiguous memory with zero fill
- *      @size:  allocation size
- *      Allocate enough pages to cover @size from the page level
- *      allocator and map them into contiguous kernel virtual space.
- *      The memory allocated is set to zero.
+ *	vzalloc - allocate virtually contiguous memory with zero fill
+ *	@size:	allocation size
+ *	Allocate enough pages to cover @size from the page level
+ *	allocator and map them into contiguous kernel virtual space.
+ *	The memory allocated is set to zero.
  *
- *      For tight control over page level allocator and protection flags
- *      use __vmalloc() instead.
+ *	For tight control over page level allocator and protection flags
+ *	use __vmalloc() instead.
  */
 void *vzalloc(unsigned long size)
 {
 	return __vmalloc_node_flags(size, -1,
-					GFP_KERNEL | __GFP_HIGHMEM | __GFP_ZERO);
+				GFP_KERNEL | __GFP_HIGHMEM | __GFP_ZERO);
 }
 EXPORT_SYMBOL(vzalloc);
 
